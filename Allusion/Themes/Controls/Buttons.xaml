<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Height" Value="{DynamicResource PrimaryButtonHeight}" />
        <Setter Property="Background" Value="{DynamicResource Button.Primary.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource Button.Primary.Border}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Mouse.IsOver}" />
                <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="Gray" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="SecondaryButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="{DynamicResource PrimaryButtonHeight}" />
        <Setter Property="Background" Value="{DynamicResource Button.Secondary.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Front}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource Button.Secondary.Border}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Mouse.IsOver}" />
                <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TabButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="{DynamicResource PrimaryButtonHeight}" />
        <Setter Property="Background" Value="{DynamicResource Tab.Button.Border.UnSelected}" />
        <Setter Property="BorderThickness" Value="2,2,2,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Tab.Button.Border.UnSelected}" />
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2,2,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!--  Not sure why they dont work here  -->
        </Style.Triggers>
    </Style>

    <Style x:Key="TabButtonAdd" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Height" Value="{DynamicResource PrimaryButtonHeight}" />
        <Setter Property="Width" Value="{DynamicResource PrimaryButtonHeight}" />
        <Setter Property="Background" Value="{DynamicResource Tab.Button.Selected}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Tab.Button.Selected}" />
        <Setter Property="BorderThickness" Value="1,1,0,1" />
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2,2,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Mouse.IsOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="DimGray" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Placement" Value="Mouse" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        CornerRadius="2">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBrush" Color="Transparent" />
                        </Border.Background>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="LightGray"
                                            Duration="0:0:0.2">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource Transparent}"
                                            Duration="0:0:0.2">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Mouse.OnClick}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarButtonClose" TargetType="Button">
        <Setter Property="Width" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBrush" Color="Transparent" />
                        </Border.Background>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource Primary.Red}"
                                            Duration="0:0:0.2">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource Transparent}"
                                            Duration="0:0:0.2">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>