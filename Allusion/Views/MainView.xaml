<Window x:Class="Allusion.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:cm="http://caliburnmicro.com"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="clr-namespace:Allusion.Behaviors"
        xmlns:viewModels="clr-namespace:Allusion.ViewModels"
        xmlns:converters="clr-namespace:Allusion.WPFCore.Converter;assembly=Allusion.WPFCore"
        xmlns:fav ="clr-namespace:FontAwesome.Sharp;assembly=FontAwesome.Sharp"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}"
        mc:Ignorable="d"
        Title="MainView"
        Height="1024"
        Width="1024"

        cm:Message.Attach="
        [Gesture Ctrl+Z] = [UndoRemove];
        [Gesture Ctrl+V] = [PasteOnCanvas];
        [Gesture Ctrl+O] = [OpenRefBoard];
        [Gesture Ctrl+S] = [SaveRefBoard];
        [Gesture Ctrl+N] = [NewRefBoard];
        [Key Delete] = [Delete]">

    <Window.Resources>
        <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <Style x:Key="TriangleThumbStyle" TargetType="Thumb">
            <Setter Property="Width" Value="15" />
            <Setter Property="Height" Value="15" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid>
                            <Polygon Fill="#353535"  StrokeThickness="0"
                                     Points="10,-5 -5,10 10,10" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for the ContextMenu -->
        <Style TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="#333333" />
            <!-- Background color -->
            <Setter Property="BorderBrush" Value="#666666" />
            <!-- Border color -->
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for MenuItem inside the ContextMenu -->
        <Style TargetType="MenuItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <!-- Text color -->
            <Setter Property="Margin" Value="10,5,10,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Header}"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#555555" />

                    <!-- Hover color -->
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid Background="DimGray">
        <Canvas Background="Transparent" x:Name="InfoCanvas" IsHitTestVisible="True">
            <TextBox BorderThickness="0"
                     IsHitTestVisible="True"
                     Margin="5"
                     Background="Transparent"
                     Text ="{Binding ActiveRefBoardName, UpdateSourceTrigger=PropertyChanged}" 
                     IsReadOnly="{Binding SettingBoardName, Converter={StaticResource InverseBoolConverter}}"
                     cm:Message.Attach="[Event MouseDoubleClick] = [EditBoardName]; [Key Enter] = [EditBoardName];"
                     Focusable="True"/>

            <!--Enable rename here by double click-->
        </Canvas>
        <Canvas x:Name="MainCanvas" Background="Transparent" AllowDrop="True">
            <Canvas.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Paste" IsEnabled="True"  cm:Message.Attach="[PasteOnCanvas]"/>
                    <MenuItem Header="Save"  cm:Message.Attach="[SaveRefBoard]"/>
                    <MenuItem Header="Option 3" />
                </ContextMenu>
            </Canvas.ContextMenu>
            <b:Interaction.Behaviors>
                <behaviors:CanvasBehavior />
            </b:Interaction.Behaviors>
            <ItemsControl ItemsSource="{Binding Images}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid     Width="{Binding  ImageSource.Width}"
                                  Height="{Binding ImageSource.Height}">
                            <ContentControl cm:View.Model="{Binding}" IsHitTestVisible="True" />
                            <Thumb x:Name="ResizeThumb" Width="10" Height="10"
                                                       VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                                       DragDelta="OnResizeThumbDragDelta"
                                                       Background="Gray"
                                                       Style="{StaticResource TriangleThumbStyle}" />
                            <!--<fav:IconImage Icon="Cross" x:Name="MoveCrossIcon" />-->

                            <b:Interaction.Behaviors>
                                <behaviors:ImageBehavior />
                            </b:Interaction.Behaviors>

                        </Grid>
                 
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding PosX, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="Canvas.Top" Value="{Binding PosY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Canvas>

    </Grid>
</Window>